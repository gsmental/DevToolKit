Navigation will not PUSH next component without a function  (not use componentDidMount)
//navigation.navigate/push/pop/PopToTop/ all option to visit next page 

npm i @react-navigation/native
                                             
npm install react-native-reanimated 
npm i react-native-gesture-handler@1.5.3
npm install  react-native-screens 
npm install react-native-safe-area-context 
npm install @react-native-community/masked-view    


npm i @react-navigation/stack






Set Parameters
--Example -1
this.props.navigation.push('LanguageArticlePage',{
     articleObj: articleObj
      }
);

Get Parameter from Other Component
this.props.route.params.articleObj;







--Example -2
function HomeScreen({ navigation }) {
  return (
    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
      <Text>Home Screen</Text>
      <Button
        title="Go to Details"
        onPress={() => {
          /* 1. Navigate to the Details route with params */
          navigation.navigate('Details', {
            itemId: 86,
            otherParam: 'anything you want here',
          });
        }}
      />
    </View>
  );
}




Get Parameter from Other Component

function DetailsScreen({ route, navigation }) {
  /* 2. Get the param */
  const { itemId } = route.params;
  const { otherParam } = route.params;
  return (
    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>
      <Text>Details Screen</Text>
      <Text>itemId: {JSON.stringify(itemId)}</Text>
      <Text>otherParam: {JSON.stringify(otherParam)}</Text>
      <Button
        title="Go to Details... again"
        onPress={() =>
          navigation.push('Details', {
            itemId: Math.floor(Math.random() * 100),
          })
        }
      />
      <Button title="Go to Home" onPress={() => navigation.navigate('Home')} />
      <Button title="Go back" onPress={() => navigation.goBack()} />
    </View>
  );
}

---- example -----3----
```js

import {NavigationContainer} from '@react-navigation/native';
import {createStackNavigator} from '@react-navigation/stack';
import {createBottomTabNavigator} from '@react-navigation/bottom-tabs';

const Tab = createBottomTabNavigator();

function MainTab() {
  return (
    // <Tab.Navigator tabBar={props => <TabBar {...props} />}>
    <Tab.Navigator initialRouteName="Messages" 
    
    
    tabBarOptions={{
      activeTintColor: 'tomato',
      inactiveTintColor: 'gray',
      
    }}>
      <Tab.Screen
        
        name="Messages"
        component={MessagesComponent}
        options={{
          title: 'Messages',
          tabBarIcon: () => (
      // question_answer
      // sticky_note_2
      // forum
      // message
      // insert_comment
            <Icon name="forum" size={30} color={MyConst.Color.colorPrimary} />
         ),
        }}
      />
      {/* <Tab.Screen name="PinsMessagesComponent" component={PinsMessagesComponent}
      options={{
        title:"Pins" ,
        tabBarIcon: () => (
          //local_offer it is best suitable but not working
          <Icon name="local_offer" size={30} color={MyConst.Color.colorPrimary} />
       ),
      }}
      /> */}
      <Tab.Screen name="SettingsComponent" component={SettingsComponent}
      options={{
        title:"Settings",
        tabBarIcon: () => (
          <Icon name="settings" size={30} color={MyConst.Color.colorPrimary} />
       ),
      }}
      />
    </Tab.Navigator>
  );
}

const Stack = createStackNavigator();

export default function AppNavigator() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="SplashScreen">
        <Stack.Screen
          name="SplashScreen"
          component={SplashScreen}
          options={{headerShown: false}}
        />
        <Stack.Screen
          name="AgreementLogin"
          component={AgreementLogin}
          options={{headerShown: false}}
        />
        <Stack.Screen
          name="DashboardHome"
          component={MainTab}
          options={{headerShown: false}}
        />
        <Stack.Screen
          name="MobileOtpVerification"
          options={{headerTitle: ''}}
          component={MobileOtpVerification}
        />
         <Stack.Screen
          name="Conversation"
          component={Conversation}
        />
      </Stack.Navigator>
    </NavigationContainer>
  );
}
```



